/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        HMR: HMR {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <60>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            require-prior-idle-ms = <30>;
            hold-trigger-on-release;
        };

        HML: HML {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <100>;
            flavor = "balanced";
            hold-trigger-key-positions = <36 37 38 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
            require-prior-idle-ms = <60>;
            hold-trigger-on-release;
        };

        TD0: TD0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD0";
            #binding-cells = <0>;
            bindings = <&kp LSHIFT>, <&kp ENTER>;
        };

        HML_slow: HML_slow {
            compatible = "zmk,behavior-hold-tap";
            label = "HML_SLOW";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <220>;
            quick-tap-ms = <120>;
            flavor = "balanced";
            hold-trigger-key-positions = <36 37 38 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
            require-prior-idle-ms = <120>;
            hold-trigger-on-release;
        };

        HMR_slow: HMR_slow {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR_SLOW";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <220>;
            quick-tap-ms = <120>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            require-prior-idle-ms = <120>;
            hold-trigger-on-release;
        };
    };

    combos {
        compatible = "zmk,combos";

        Bluetooth {
            bindings = <&mo 4>;
            key-positions = <36 37 38>;
        };

        Paste {
            bindings = <&kp LC(V)>;
            key-positions = <28 16>;
        };

        paste_enter {
            bindings = <&paste_enter>;
            key-positions = <27 28>;
        };

        copy {
            bindings = <&kp LC(C)>;
            key-positions = <27 15>;
        };

        print_screen {
            bindings = <&kp LG(LS(S))>;
            key-positions = <36 37>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <14 15>;
        };

        L3 {
            bindings = <&mo 3>;
            key-positions = <0 5>;
        };

        bt_clr_all {
            bindings = <&bt BT_CLR_ALL>;
            key-positions = <0 24 5>;
        };

        kb_english {
            bindings = <&kp LS(LA(NUMBER_1))>;
            key-positions = <38 15>;
        };

        kb_georgian {
            bindings = <&kp LS(LA(N0))>;
            key-positions = <39 20>;
        };
    };

    macros {
        paste_enter: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(V) &kp ENTER>;
            label = "PASTE_ENTER";
        };

        lambda_sign: lambda_sign {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GT>;
            label = "LAMBDA_SIGN";
        };

        lambda_x: lambda_x {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LPAR &kp X &kp SPACE &kp EQUAL &kp GT &kp SPACE &kp X &kp DOT &kp RPAR &kp LEFT_ARROW>;
            label = "LAMBDA_X";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp ESCAPE               &kp Q             &kp W                 &kp E             &kp R                &kp T               &kp Y        &kp U                 &kp I         &kp O                  &kp P                     &kp BSPC
&kp TAB                  &HML_slow LWIN A  &HML_slow LEFT_ALT S  &HML LSHIFT D     &HML LEFT_CONTROL F  &kp G               &kp H        &HMR RIGHT_CONTROL J  &HMR RSHFT K  &HMR_slow RIGHT_ALT L  &HMR_slow RWIN SEMICOLON  &kp APOSTROPHE
&kp LS(LA(KP_NUMBER_1))  &kp Z             &kp X                 &kp C             &kp V                &kp B               &kp N        &kp M                 &kp COMMA     &kp DOT                &kp FSLH                  &kp LS(LA(KP_NUMBER_0))
                                                                 &kp LEFT_CONTROL  &lt 1 ENTER          &mt LSHIFT SPACE    &lt 2 SPACE  &lt 1 ENTER           &mo 4
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Lower";
            bindings = <
&kp GRAVE             &kp F1                   &kp F2                  &kp F3                &kp F4                      &kp F5         &kp F6        &kp F7                 &kp F8               &kp F9                &kp F10                &kp BACKSPACE
&kp LS(LA(N0))        &HML LEFT_META NUMBER_1  &HML LEFT_ALT NUMBER_2  &HML LSHIFT NUMBER_3  &HML LEFT_CONTROL NUMBER_4  &kp N5         &kp NUMBER_6  &HMR RIGHT_CONTROL N7  &HMR RIGHT_SHIFT N8  &HMR RIGHT_ALT N9     &kp N0                 &kp F12
&kp LS(LA(NUMBER_1))  &kp EXCLAMATION          &kp AT_SIGN             &kp HASH              &kp DOLLAR                  &kp PERCENT    &kp CARET     &kp AMPERSAND          &kp ASTERISK         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp F11
                                                                       &kp LANGUAGE_2        &kp LS(LEFT_ALT)            &kp SPACE      &TD0          &kp LG(LS(LEFT))       &kp LANG1
            >;
        };

        SpaceFN {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Raise";
            bindings = <
&kp ESC  &kp F1         &kp F2            &kp F3             &kp F4            &kp F5                  &kp F6         &kp HOME    &kp UP_ARROW      &kp END            &kp BACKSPACE  &lambda_sign
&trans   &kp LEFT_META  &kp LEFT_ALT      &kp LSHIFT         &kp LEFT_CONTROL  &trans                  &kp PAGE_UP    &kp LEFT    &kp DOWN          &kp RIGHT          &kp MINUS      &kp EQUAL
&trans   &trans         &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans            &trans                  &kp PAGE_DOWN  &kp DELETE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH  &lambda_x
                                          &trans             &trans            &mt LEFT_SHIFT SPACE    &kp SPACE      &trans      &trans
            >;
        };

        layer_3 {
            bindings = <
&trans          &trans  &trans  &trans  &trans                   &kp C_VOLUME_UP            &trans  &trans      &trans  &trans  &trans  &kp DELETE
&trans          &trans  &trans  &trans  &trans                   &kp C_VOL_DN               &trans  &trans      &trans  &trans  &trans  &trans
&bt BT_CLR_ALL  &trans  &trans  &trans  &kp LS(LA(KP_NUMBER_1))  &kp LS(LA(KP_NUMBER_0))    &trans  &kp DELETE  &trans  &trans  &trans  &trans
                                &trans  &trans                   &trans                     &trans  &trans      &trans
            >;
        };

        Bluetooth {
            bindings = <
&trans          &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_CLR_ALL  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
